{
 "cells": [
  {
   "cell_type": "code",
   "execution_count": 1,
   "id": "9b120910-5c63-4a2b-aa4f-411842ce7fa7",
   "metadata": {},
   "outputs": [],
   "source": [
    "import os\n",
    "import pandas as pd\n",
    "import numpy as np\n",
    "\n",
    "import matplotlib.pyplot as plt\n",
    "%matplotlib inline\n",
    "import seaborn as sns\n",
    "\n",
    "from sklearn import preprocessing\n",
    "from sklearn.model_selection import train_test_split, cross_val_score, StratifiedKFold\n",
    "from sklearn.preprocessing import LabelEncoder\n",
    "from sklearn.linear_model import LogisticRegression\n",
    "from sklearn.metrics import accuracy_score\n",
    "from sklearn.ensemble import RandomForestRegressor, ExtraTreesRegressor\n",
    "#from func import assign_Alcohol\n",
    "import missingno as msno\n",
    "\n",
    "import pickle\n",
    "\n",
    "from sklearn.metrics import mean_squared_error,r2_score, mean_absolute_error\n",
    "import warnings\n",
    "warnings.simplefilter('ignore')"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 2,
   "id": "2840e0af-1183-448e-881d-cf5b8fe5924a",
   "metadata": {},
   "outputs": [],
   "source": [
    "ds = pd.read_csv(\"..//data//train.csv\",sep=\",\")"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 3,
   "id": "b393727a-4c10-49c8-af2c-2d91579ea1c4",
   "metadata": {},
   "outputs": [],
   "source": [
    "ds.rename(columns={'Life expectancy ':'Life expectancy',  'Measles ': 'Measles', 'infant deaths' :'Infant deaths',' BMI ':'BMI', 'under-five deaths ': 'Under-five deaths',  'Diphtheria ':  'Diphtheria',  ' thinness  1-19 years': 'Thinness  1-19 years', ' thinness 5-9 years':'Thinness 5-9 years'}, inplace=True)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 4,
   "id": "8f5a6e01-bfaf-43af-bf9c-7dd6f4a428aa",
   "metadata": {},
   "outputs": [],
   "source": [
    "def assign_Alcohol(row):\n",
    "    if row['Status'] == 'Developing':\n",
    "        return 2.5\n",
    "    else:\n",
    "        return 10\n",
    "ds[\"Alcohol\"].fillna(ds.apply(assign_Alcohol, axis=1), inplace=True)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 5,
   "id": "9f5b1b51-ecd6-43b2-821e-6a30b744c98b",
   "metadata": {},
   "outputs": [],
   "source": [
    "columns_to_fill = ['Population', 'GDP', 'Schooling', 'Hepatitis B', 'Total expenditure']\n",
    "\n",
    "for column in columns_to_fill:\n",
    "    # Ensure the DataFrame is sorted by Country and Year\n",
    "    ds = ds.sort_values(by=['Country', 'Year'])\n",
    "    \n",
    "    # Compute the mode of the  column, dropping NaN values\n",
    "    mode_ = ds[column].median()\n",
    "    \n",
    "    # Iterate over each country\n",
    "    for country in ds['Country'].unique():\n",
    "        # Filter the dataframe for the current country\n",
    "        country_df = ds[ds['Country'] == country]\n",
    "        \n",
    "        # Fill missing values using forward fill and backward fill\n",
    "        country_df[column] = country_df[column].fillna(method='ffill').fillna(method='bfill')\n",
    "        # Update the original DataFrame with the filled values\n",
    "        ds.update(country_df)\n",
    "    \n",
    "    # For any remaining NaNs in the population column, fill with the mode value\n",
    "    if mode_ is not None:\n",
    "        ds[column] = ds[column].fillna(mode_)\n",
    "    # Save the mode value to a file\n",
    "    with open(f'..//saves//insert_value_{column}.pkl', 'wb') as f:\n",
    "        pickle.dump(mode_, f)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 6,
   "id": "bb229e73-ec6b-4ade-b06d-280e50623300",
   "metadata": {},
   "outputs": [],
   "source": [
    "column_to_fill = ['BMI',\n",
    " 'Diphtheria',\n",
    " 'Income composition of resources',\n",
    " 'Polio', 'Thinness  1-19 years',\n",
    " 'Thinness 5-9 years']\n",
    "\n",
    "for column in column_to_fill:\n",
    "    median_value = ds[column].median()\n",
    "    ds[column] = ds[column].fillna(median_value)\n",
    "    with open(f'..//saves//insert_value_{column}.pkl', 'wb') as f:\n",
    "        pickle.dump(median_value, f)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 7,
   "id": "f2abf715-a9ed-43c8-8b06-15546e223e39",
   "metadata": {},
   "outputs": [],
   "source": [
    "ds = ds[ds['Infant deaths'] <= 1000]#drop anomalies \n",
    "ds = ds[ds['Under-five deaths'] <= 1000]#drop anomalies \n",
    "ds = ds[ds['Measles'] <= 1000]#drop anomalies"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 8,
   "id": "d6785eba-8619-4166-87f1-5ebcdb3934a9",
   "metadata": {},
   "outputs": [],
   "source": [
    "ds.dropna(axis=0, subset=['Life expectancy'], inplace=True)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 9,
   "id": "2fea0c97-d1fe-4e86-b932-a6dec53c77b2",
   "metadata": {},
   "outputs": [],
   "source": [
    "#Encoding"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 10,
   "id": "bd4c20f4-78a0-41b5-9bf0-a08b5a38f0c9",
   "metadata": {},
   "outputs": [],
   "source": [
    "# Fit and transform 'PracticeSport' using LabelEncoder\n",
    "label_encoder_Country = LabelEncoder()\n",
    "ds['Country'] = label_encoder_Country.fit_transform(ds['Country'])\n",
    "\n",
    "# Fit and transform 'WklyStudyHours' using LabelEncoder\n",
    "label_encoder_Status = LabelEncoder()\n",
    "ds['Status'] = label_encoder_Status.fit_transform(ds['Status'])"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 11,
   "id": "8e55c2e0-8dfd-481a-8da1-1d8f598cfc0c",
   "metadata": {},
   "outputs": [],
   "source": [
    "# Save the LabelEncoder instances to pickle\n",
    "with open('..//saves//label_encoder_Country.pkl', 'wb') as f:\n",
    "    pickle.dump(label_encoder_Country, f)\n",
    "\n",
    "with open('..//saves//label_encoder_Status.pkl', 'wb') as f:\n",
    "    pickle.dump(label_encoder_Status, f)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 12,
   "id": "4702c75e-301c-4e0e-ab6e-eb26d6fc946d",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "<class 'pandas.core.frame.DataFrame'>\n",
      "Index: 1933 entries, 2074 to 1111\n",
      "Data columns (total 22 columns):\n",
      " #   Column                           Non-Null Count  Dtype  \n",
      "---  ------                           --------------  -----  \n",
      " 0   Country                          1933 non-null   int32  \n",
      " 1   Year                             1933 non-null   int64  \n",
      " 2   Status                           1933 non-null   int32  \n",
      " 3   Life expectancy                  1933 non-null   float64\n",
      " 4   Adult Mortality                  1933 non-null   float64\n",
      " 5   Infant deaths                    1933 non-null   int64  \n",
      " 6   Alcohol                          1933 non-null   float64\n",
      " 7   percentage expenditure           1933 non-null   float64\n",
      " 8   Hepatitis B                      1933 non-null   float64\n",
      " 9   Measles                          1933 non-null   int64  \n",
      " 10  BMI                              1933 non-null   float64\n",
      " 11  Under-five deaths                1933 non-null   int64  \n",
      " 12  Polio                            1933 non-null   float64\n",
      " 13  Total expenditure                1933 non-null   float64\n",
      " 14  Diphtheria                       1933 non-null   float64\n",
      " 15   HIV/AIDS                        1933 non-null   float64\n",
      " 16  GDP                              1933 non-null   float64\n",
      " 17  Population                       1933 non-null   float64\n",
      " 18  Thinness  1-19 years             1933 non-null   float64\n",
      " 19  Thinness 5-9 years               1933 non-null   float64\n",
      " 20  Income composition of resources  1933 non-null   float64\n",
      " 21  Schooling                        1933 non-null   float64\n",
      "dtypes: float64(16), int32(2), int64(4)\n",
      "memory usage: 332.2 KB\n"
     ]
    }
   ],
   "source": [
    "ds.info()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 13,
   "id": "7e660b8f-227b-4837-96f4-04be607e17aa",
   "metadata": {},
   "outputs": [],
   "source": [
    "X =  ds.drop(['Life expectancy'],axis=1)\n",
    "y =  ds['Life expectancy']"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 14,
   "id": "79bfa378-afc4-49c4-9d51-4b0a791936a3",
   "metadata": {},
   "outputs": [],
   "source": [
    "X_train, X_test, y_train, y_test = train_test_split(X, y, test_size=0.25, random_state=42)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 15,
   "id": "5aa0c03a-b43c-4901-8941-06eba2fdc081",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Mean CV R² Score: 0.959\n",
      "Standard Deviation of CV R² Score: 0.005\n"
     ]
    }
   ],
   "source": [
    "# Initialize the ExtraTreesRegressor\n",
    "model = ExtraTreesRegressor(n_estimators=100, random_state=39)\n",
    "\n",
    "# Perform cross-validation using R² as the scoring metric\n",
    "cv_scores = cross_val_score(model, X_train, y_train, cv=5, scoring='r2')\n",
    "\n",
    "# Calculate mean and standard deviation of cross-validation scores\n",
    "mean_cv_score = np.mean(cv_scores)\n",
    "std_cv_score = np.std(cv_scores)\n",
    "\n",
    "print(f\"Mean CV R² Score: {mean_cv_score:.3f}\")\n",
    "print(f\"Standard Deviation of CV R² Score: {std_cv_score:.3f}\")\n",
    "\n",
    "# Train the model on the entire training dataset\n",
    "model.fit(X_train, y_train)\n",
    "\n",
    "# Evaluate the model on the test set\n",
    "y_pred = model.predict(X_test)\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 16,
   "id": "7d4d5d8f-9549-42ca-8199-d10c980d4347",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Test accuracy (Life expectancy): 95.96%\n"
     ]
    }
   ],
   "source": [
    " # Calculating quality metrics\n",
    "test_mae = mean_absolute_error(y_test, y_pred)\n",
    "test_mse = mean_squared_error(y_test, y_pred)\n",
    "test_rmse = mean_squared_error(y_test, y_pred, squared=False)\n",
    "test_r2 = r2_score(y_test, y_pred)\n",
    "test_accuracy = round(model.score(X_test, y_test) * 100, 2)\n",
    "print(f'Test accuracy ({'Life expectancy'}): {test_accuracy}%')"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 17,
   "id": "91dadc8e-0250-4452-af55-dad45e8c0970",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Regression Report:\n",
      "Test MAE (Life expectancy): 0.9821590909090903\n",
      "Test MSE (Life expectancy): 3.239346613636363\n",
      "Test RMSE (Life expectancy): 1.7998184946367128\n",
      "Test R2 score (Life expectancy): 0.959604021276926\n"
     ]
    }
   ],
   "source": [
    "# Валідація результатів та виведення їх у файл\n",
    "# Виведення у консоль\n",
    "print(\"Regression Report:\")\n",
    "print(f'Test MAE ({'Life expectancy'}): {test_mae}')\n",
    "print(f'Test MSE ({'Life expectancy'}): {test_mse}')\n",
    "print(f'Test RMSE ({'Life expectancy'}): {test_rmse}')\n",
    "print(f'Test R2 score ({'Life expectancy'}): {test_r2}')\n",
    "\n",
    "# Запис у файл\n",
    "with open(\"..//saves//validation_results.txt\", \"w\") as f:\n",
    "    f.write(\"Regression Report:\\n\")\n",
    "    f.write(f'Test MAE ({'Life expectancy'}): {test_mae} \\n Test MSE ({'Life expectancy'}): {test_mse} \\n Test RMSE ({'Life expectancy'}): {test_rmse} \\n Test R2 score ({'Life expectancy'}): {test_r2}')"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 18,
   "id": "e94cfdbb-0ec4-4808-9cfc-069bb0f4a9b5",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "image/png": "",
      "text/plain": [
       "<Figure size 1000x600 with 1 Axes>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "# Get feature importance\n",
    "feature_importance = model.feature_importances_\n",
    "\n",
    "# Get the names of the features\n",
    "feature_names = X_train.columns\n",
    "\n",
    "# Combine feature names and their importance scores\n",
    "feature_importance_dict = dict(zip(feature_names, feature_importance))\n",
    "\n",
    "# Write feature importance to a file\n",
    "with open('..//saves//feature_importance.txt', 'w') as f:\n",
    "    for feature, importance in sorted(feature_importance_dict.items(), key=lambda x: x[1], reverse=True):\n",
    "        f.write(f\"{feature}: {importance}\\n\")\n",
    "\n",
    "\n",
    "# Sort features by their importance scores\n",
    "sorted_indices = np.argsort(feature_importance)[::-1]\n",
    "sorted_features = [feature_names[i] for i in sorted_indices]\n",
    "sorted_importance = [feature_importance[i] for i in sorted_indices]\n",
    "# Plot feature importances\n",
    "plt.figure(figsize=(10, 6))\n",
    "bars = plt.barh(range(len(sorted_features)), sorted_importance, align='center')\n",
    "# Write importance values on each bar\n",
    "for bar, importance in zip(bars, sorted_importance):\n",
    "    plt.text(bar.get_width(), bar.get_y() + bar.get_height()/2, f'{importance:.2f}', va='center', ha='left')\n",
    "plt.yticks(range(len(sorted_features)), sorted_features)\n",
    "plt.xlabel('Feature Importance')\n",
    "plt.ylabel('Feature')\n",
    "plt.title('Feature Importance')\n",
    "plt.gca().invert_yaxis()  # Invert y-axis to have the most important feature at the top\n",
    "plt.show()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 19,
   "id": "f827eb00-26b0-430c-9205-58b9f00670b8",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "['..//models//trained_model.pkl']"
      ]
     },
     "execution_count": 19,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "import joblib\n",
    "\n",
    "# Збереження натренованої моделі в файл\n",
    "joblib.dump(model, '..//models//trained_model.pkl')"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "id": "a4b8f888-e683-4664-a4fc-b87cba1eb3c6",
   "metadata": {},
   "outputs": [],
   "source": []
  }
 ],
 "metadata": {
  "kernelspec": {
   "display_name": "Python 3 (ipykernel)",
   "language": "python",
   "name": "python3"
  },
  "language_info": {
   "codemirror_mode": {
    "name": "ipython",
    "version": 3
   },
   "file_extension": ".py",
   "mimetype": "text/x-python",
   "name": "python",
   "nbconvert_exporter": "python",
   "pygments_lexer": "ipython3",
   "version": "3.12.1"
  }
 },
 "nbformat": 4,
 "nbformat_minor": 5
}
